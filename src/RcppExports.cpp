// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// charToInt
List charToInt(CharacterVector Seq);
RcppExport SEXP microclass_charToInt(SEXP SeqSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< CharacterVector >::type Seq(SeqSEXP);
    __result = Rcpp::wrap(charToInt(Seq));
    return __result;
END_RCPP
}
// Kmer_count
IntegerMatrix Kmer_count(SEXP seqs, int K, bool names);
RcppExport SEXP microclass_Kmer_count(SEXP seqsSEXP, SEXP KSEXP, SEXP namesSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type seqs(seqsSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< bool >::type names(namesSEXP);
    __result = Rcpp::wrap(Kmer_count(seqs, K, names));
    return __result;
END_RCPP
}
// multinomClassifyCpp
List multinomClassifyCpp(List seqs, int K, NumericMatrix QMat, NumericVector Prior, bool posterior);
RcppExport SEXP microclass_multinomClassifyCpp(SEXP seqsSEXP, SEXP KSEXP, SEXP QMatSEXP, SEXP PriorSEXP, SEXP posteriorSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< List >::type seqs(seqsSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type QMat(QMatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Prior(PriorSEXP);
    Rcpp::traits::input_parameter< bool >::type posterior(posteriorSEXP);
    __result = Rcpp::wrap(multinomClassifyCpp(seqs, K, QMat, Prior, posterior));
    return __result;
END_RCPP
}
// multinomTrainCpp
SEXP multinomTrainCpp(List seqs, int K, bool names, List classesIn, double nPseudo);
RcppExport SEXP microclass_multinomTrainCpp(SEXP seqsSEXP, SEXP KSEXP, SEXP namesSEXP, SEXP classesInSEXP, SEXP nPseudoSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< List >::type seqs(seqsSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< bool >::type names(namesSEXP);
    Rcpp::traits::input_parameter< List >::type classesIn(classesInSEXP);
    Rcpp::traits::input_parameter< double >::type nPseudo(nPseudoSEXP);
    __result = Rcpp::wrap(multinomTrainCpp(seqs, K, names, classesIn, nPseudo));
    return __result;
END_RCPP
}
// rdpClassifyCpp
List rdpClassifyCpp(List seqs, int K, NumericMatrix QMat, NumericVector Prior, bool posterior);
RcppExport SEXP microclass_rdpClassifyCpp(SEXP seqsSEXP, SEXP KSEXP, SEXP QMatSEXP, SEXP PriorSEXP, SEXP posteriorSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< List >::type seqs(seqsSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type QMat(QMatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Prior(PriorSEXP);
    Rcpp::traits::input_parameter< bool >::type posterior(posteriorSEXP);
    __result = Rcpp::wrap(rdpClassifyCpp(seqs, K, QMat, Prior, posterior));
    return __result;
END_RCPP
}
// rdpTrainCpp
SEXP rdpTrainCpp(List seqs, int K, bool names, List classesIn, double nPseudo);
RcppExport SEXP microclass_rdpTrainCpp(SEXP seqsSEXP, SEXP KSEXP, SEXP namesSEXP, SEXP classesInSEXP, SEXP nPseudoSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< List >::type seqs(seqsSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< bool >::type names(namesSEXP);
    Rcpp::traits::input_parameter< List >::type classesIn(classesInSEXP);
    Rcpp::traits::input_parameter< double >::type nPseudo(nPseudoSEXP);
    __result = Rcpp::wrap(rdpTrainCpp(seqs, K, names, classesIn, nPseudo));
    return __result;
END_RCPP
}
